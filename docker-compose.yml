version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: base-acl-api
    restart: always
    ports:
      - '8080:3333'
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      TZ: ${TZ}
      PORT: ${PORT}
      HOST: ${HOST}
      LOG_LEVEL: ${LOG_LEVEL}
      APP_KEY: ${APP_KEY}
      NODE_ENV: ${NODE_ENV}

      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}

      DB_HOST: postgres
      DB_PORT: ${PG_PORT}
      DB_USER: ${PG_USER}
      DB_PASSWORD: ${PG_PASSWORD}
      DB_DATABASE: ${PG_DB_NAME}

    networks:
      - app-network
  postgres:
    image: postgres:latest
    container_name: base-acl-postgres
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-q', '-d', 'postgres', '-U', 'postgres' ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    expose:
      - 5432
    volumes:
      - database:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  database:
